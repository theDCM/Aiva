@using System.Linq;
@using Aiva.Models;
@{
    string UserType()
    {
        if (ViewBag.IsUser)
        {
            return "Клиент";
        }
        return "Повар";
    }
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no">
    <title>aiva</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Bitter:400,700">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/ionicons/2.0.1/css/ionicons.min.css">
    <link rel="stylesheet" href="assets/css/Header-Dark.css">
    <link rel="stylesheet" href="assets/css/Login-Form-Dark.css">
    <link rel="stylesheet" href="assets/css/Registration-Form-with-Photo.css">
    <link rel="stylesheet" href="assets/css/styles.css">
</head>

<body>
    <header class="header-dark" style="padding-bottom: 0;margin-bottom: 12px;">
        <nav class="navbar navbar-dark navbar-expand-lg d-flex justify-content-center align-items-center align-content-center mx-auto navigation-clean-search">
            <div class="container"><a class="navbar-brand d-flex justify-content-center align-items-center align-content-center mx-auto" href="/">AIVA</a></div>
        </nav>
        <div class="container hero" style="margin-top: 0;padding: 1px;">
            <div class="row" style="margin-right: 0;margin-left: 0;">
                <div class="col-md-8 offset-md-2">
                    <h1 class="text-center" style="font-size: 38px;margin-bottom: 30px;">
                        @ViewBag.Data.FirstName @ViewBag.Data.LastName
                    </h1>
                </div>
            </div>
        </div>
        <div class="btn-group-vertical d-flex justify-content-center align-items-center" role="group"></div>
    </header>
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <p style="margin: 20px;margin-bottom: 0px;">Идентификатор</p>
                <p style="margin: 20px;margin-top: 0px;text-align: right;">@ViewBag.Data.Id</p>
            </div>
            <div class="col-md-12">
                <p style="margin: 20px;margin-bottom: 0px;">Тип</p>
                <p style="margin: 20px;margin-top: 0px;text-align: right;">@UserType()</p>
            </div>
            <div class="col-md-12">
                <p style="margin: 20px;margin-bottom: 0px;">Дата рождения</p>
                <p style="margin: 20px;margin-top: 0px;text-align: right;">@ViewBag.Data.BirthdayDate.ToShortDateString()</p>
            </div>
            @if (!ViewBag.IsUser)
            {
                <div class="col-md-12">
                    <p style="margin: 20px;margin-bottom: 0px;">Тип кухни приготовления</p>
                    <p style="margin: 20px;margin-top: 0px;text-align: right;">@ViewBag.Data.Kitchen.Name</p>
                </div>
            }
        </div>
    </div>
    <form method="post" action="/api/logout">
        <div class="container">
            <div class="row">
                <div class="col-md-12"><button class="btn btn-warning active border rounded-pill d-flex mx-auto" type="submit" style="margin: 20px;">Выйти из аккаунта</button></div>
            </div>
        </div>
    </form>
    <hr>
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="display-6 text-center">Список заказов</h1>
            </div>
        </div>
        @if (!ViewBag.HasOrders)
        {
            <p class="text-center" style="margin-bottom: 0px;font-weight: bold;">Заказов нет</p>
        }
        else
        {
            @if (!ViewBag.IsUser)
            {
                @*повар*@
                <div class="alert alert-primary" role="alert">
                    Новые заказы
                </div>
                @foreach (var order in ((List<IGrouping<Order, OrderItem>>)ViewBag.Orders).Where(x => x.Key.State == OrderState.Created && !x.Key.Cooks.Select(x=>x.Login).Contains(User.Identity.Name)))
                {
                    <div class="row">
                        <div class="col" style="margin-top: 10px;margin-bottom: 10px;">
                            <p class="text-center" style="margin-bottom: 16px;font-weight: bold;">Заказ #@order.Key.Number</p>
                            <p style="margin-bottom: 0px;">От @order.Key.CreatedAt</p>
                            <p style="margin-bottom: 0px;">Адрес доставки: @order.Key.Address</p>
                            <p style="margin-bottom: 0px;">Клиент: @order.Key.Client.FirstName @order.Key.Client.LastName (@order.Key.Client.Phone)</p>
                            <p style="margin-bottom: 0px;">Список товаров:</p>
                            <ul type="disc">
                                @foreach (var orderItem in order)
                                {
                                    <li>
                                        <p style="margin-bottom: 0px;">@orderItem.Item.Name x @orderItem.Count = ₽ @(orderItem.Item.Price*orderItem.Count)</p>
                                    </li>
                                }
                            </ul>
                            <p style="margin-bottom: 0px;font-weight: bold;">Итого: ₽ @order.Key.Price</p>
                            <button class="btn btn-info" onclick="upgrade(@order.Key.Id)" type="button">Принять</button>
                        </div>
                        <hr>
                    </div>
                }
                <div class="alert alert-info" role="alert">
                    Подтверждённые заказы
                </div>
                @foreach (var order in ((List<IGrouping<Order, OrderItem>>)ViewBag.Orders).Where(x => x.Key.State == OrderState.Confirmed))
                {
                    <div class="row">
                        <div class="col" style="margin-top: 10px;margin-bottom: 10px;">
                            <p class="text-center" style="margin-bottom: 16px;font-weight: bold;">Заказ #@order.Key.Number</p>
                            <p style="margin-bottom: 0px;">От @order.Key.CreatedAt</p>
                            <p style="margin-bottom: 0px;">Принят @order.Key.ConfirmedAt</p>
                            <p style="margin-bottom: 0px;">Клиент: @order.Key.Client.FirstName @order.Key.Client.LastName (@order.Key.Client.Phone)</p>
                            <p style="margin-bottom: 0px;">Адрес доставки: @order.Key.Address</p>
                            <p style="margin-bottom: 0px;">Список товаров:</p>
                            <ul type="disc">
                                @foreach (var orderItem in order)
                                {
                                    <li>
                                        <p style="margin-bottom: 0px;">@orderItem.Item.Name x @orderItem.Count = ₽ @(orderItem.Item.Price*orderItem.Count)</p>
                                    </li>
                                }
                            </ul>
                            <p style="margin-bottom: 0px;font-weight: bold;">Итого: ₽ @order.Key.Price</p>
                            <button class="btn btn-warning" onclick="upgrade(@order.Key.Id)" type="button">В работу</button>

                        </div>
                        <hr>
                    </div>
                }
                <div class="alert alert-warning" role="alert">
                    Заказы в работе
                </div>
                @foreach (var order in ((List<IGrouping<Order, OrderItem>>)ViewBag.Orders).Where(x => x.Key.State == OrderState.Started))
                {
                    <div class="row">
                        <div class="col" style="margin-top: 10px;margin-bottom: 10px;">
                            <p class="text-center" style="margin-bottom: 16px;font-weight: bold;">Заказ #@order.Key.Number</p>
                            <p style="margin-bottom: 0px;">От @order.Key.CreatedAt</p>
                            <p style="margin-bottom: 0px;">Принят @order.Key.ConfirmedAt</p>
                            <p style="margin-bottom: 0px;">Взят в работу @order.Key.StartedAt</p>
                            <p style="margin-bottom: 0px;">Клиент: @order.Key.Client.FirstName @order.Key.Client.LastName (@order.Key.Client.Phone)</p>
                            <p style="margin-bottom: 0px;">Адрес доставки: @order.Key.Address</p>
                            <p style="margin-bottom: 0px;">Список товаров:</p>
                            <ul type="disc">
                                @foreach (var orderItem in order)
                                {
                                    <li>
                                        <p style="margin-bottom: 0px;">@orderItem.Item.Name x @orderItem.Count = ₽ @(orderItem.Item.Price*orderItem.Count)</p>
                                    </li>
                                }
                            </ul>
                            <p style="margin-bottom: 0px;font-weight: bold;">Итого: ₽ @order.Key.Price</p>
                            <button class="btn btn-success" onclick="upgrade(@order.Key.Id)" type="button">Готов</button>
                        </div>
                        <hr>
                    </div>
                }
                <div class="alert alert-success" role="alert">
                    Завершённые заказы
                </div>
                @foreach (var order in ((List<IGrouping<Order, OrderItem>>)ViewBag.Orders).Where(x => x.Key.State == OrderState.Finished))
                {
                    <div class="row">
                        <div class="col" style="margin-top: 10px;margin-bottom: 10px;">
                            <p class="text-center" style="margin-bottom: 16px;font-weight: bold;">Заказ #@order.Key.Number</p>
                            <p style="margin-bottom: 0px;">От @order.Key.CreatedAt</p>
                            <p style="margin-bottom: 0px;">Принят @order.Key.ConfirmedAt</p>
                            <p style="margin-bottom: 0px;">Взят в работу @order.Key.StartedAt</p>
                            <p style="margin-bottom: 0px;">Завершён @order.Key.FinishedAt</p>
                            <p style="margin-bottom: 0px;">Клиент: @order.Key.Client.FirstName @order.Key.Client.LastName (@order.Key.Client.Phone)</p>
                            <p style="margin-bottom: 0px;">Адрес доставки: @order.Key.Address</p>
                            <p style="margin-bottom: 0px;">Список товаров:</p>
                            <ul type="disc">
                                @foreach (var orderItem in order)
                                {
                                    <li>
                                        <p style="margin-bottom: 0px;">@orderItem.Item.Name x @orderItem.Count = ₽ @(orderItem.Item.Price*orderItem.Count)</p>
                                    </li>
                                }
                            </ul>
                            <p style="margin-bottom: 0px;font-weight: bold;">Итого: ₽ @order.Key.Price</p>
                        </div>
                        <hr>
                    </div>
                }
            }
            else
            {
                <div class="alert alert-primary" role="alert">
                    Новые заказы
                </div>
                @foreach (var order in ((List<IGrouping<Order, OrderItem>>)ViewBag.Orders).Where(x => x.Key.State == OrderState.Created))
                {
                    <div class="row">
                        <div class="col" style="margin-top: 10px;margin-bottom: 10px;">
                            <p class="text-center" style="margin-bottom: 16px;font-weight: bold;">Заказ #@order.Key.Number</p>
                            <p style="margin-bottom: 0px;">От @order.Key.CreatedAt</p>
                            <p style="margin-bottom: 0px;">Адрес доставки: @order.Key.Address</p>
                            <p style="margin-bottom: 0px;">Список товаров:</p>
                            <ul type="disc">
                                @foreach (var orderItem in order)
                                {
                                    <li>
                                        <p style="margin-bottom: 0px;">@orderItem.Item.Name x @orderItem.Count = ₽ @(orderItem.Item.Price*orderItem.Count)</p>
                                    </li>
                                }
                            </ul>
                            <p style="margin-bottom: 0px;font-weight: bold;">Итого: ₽ @order.Key.Price</p>
                        </div>
                        <hr>
                    </div>
                }
                <div class="alert alert-info" role="alert">
                    Подтверждённые заказы
                </div>
                @foreach (var order in ((List<IGrouping<Order, OrderItem>>)ViewBag.Orders).Where(x => x.Key.State == OrderState.Confirmed))
                {
                    <div class="row">
                        <div class="col" style="margin-top: 10px;margin-bottom: 10px;">
                            <p class="text-center" style="margin-bottom: 16px;font-weight: bold;">Заказ #@order.Key.Number</p>
                            <p style="margin-bottom: 0px;">От @order.Key.CreatedAt</p>
                            <p style="margin-bottom: 0px;">Принят @order.Key.ConfirmedAt</p>
                            <p style="margin-bottom: 0px;">
                                Повара:<br />
                                @foreach (var cook in @order.Key.Cooks)
                                {
                                <p style="margin-bottom: 0px;">@cook.FirstName @cook.LastName (@cook.Phone)<br /></p>
                                }
                            </p>
                            <p style="margin-bottom: 0px;">Адрес доставки: @order.Key.Address</p>
                            <p style="margin-bottom: 0px;">Список товаров:</p>
                            <ul type="disc">
                                @foreach (var orderItem in order)
                                {
                                    <li>
                                        <p style="margin-bottom: 0px;">@orderItem.Item.Name x @orderItem.Count = ₽ @(orderItem.Item.Price*orderItem.Count)</p>
                                    </li>
                                }
                            </ul>
                            <p style="margin-bottom: 0px;font-weight: bold;">Итого: ₽ @order.Key.Price</p>
                        </div>
                        <hr>
                    </div>
                }
                <div class="alert alert-warning" role="alert">
                    Заказы в работе
                </div>
                @foreach (var order in ((List<IGrouping<Order, OrderItem>>)ViewBag.Orders).Where(x => x.Key.State == OrderState.Started))
                {
                    <div class="row">
                        <div class="col" style="margin-top: 10px;margin-bottom: 10px;">
                            <p class="text-center" style="margin-bottom: 16px;font-weight: bold;">Заказ #@order.Key.Number</p>
                            <p style="margin-bottom: 0px;">От @order.Key.CreatedAt</p>
                            <p style="margin-bottom: 0px;">Принят @order.Key.ConfirmedAt</p>
                            <p style="margin-bottom: 0px;">Взят в работу @order.Key.StartedAt</p>
                            <p style="margin-bottom: 0px;">
                                Повара:<br />
                                @foreach (var cook in @order.Key.Cooks)
                                {
                                <p style="margin-bottom: 0px;">@cook.FirstName @cook.LastName (@cook.Phone)<br /></p>
                                }
                            </p>
                            <p style="margin-bottom: 0px;">Адрес доставки: @order.Key.Address</p>
                            <p style="margin-bottom: 0px;">Список товаров:</p>
                            <ul type="disc">
                                @foreach (var orderItem in order)
                                {
                                    <li>
                                        <p style="margin-bottom: 0px;">@orderItem.Item.Name x @orderItem.Count = ₽ @(orderItem.Item.Price*orderItem.Count)</p>
                                    </li>
                                }
                            </ul>
                            <p style="margin-bottom: 0px;font-weight: bold;">Итого: ₽ @order.Key.Price</p>
                        </div>
                        <hr>
                    </div>
                }
                <div class="alert alert-success" role="alert">
                    Завершённые заказы
                </div>
                @foreach (var order in ((List<IGrouping<Order, OrderItem>>)ViewBag.Orders).Where(x => x.Key.State == OrderState.Finished))
                {
                    <div class="row">
                        <div class="col" style="margin-top: 10px;margin-bottom: 10px;">
                            <p class="text-center" style="margin-bottom: 16px;font-weight: bold;">Заказ #@order.Key.Number</p>
                            <p style="margin-bottom: 0px;">От @order.Key.CreatedAt</p>
                            <p style="margin-bottom: 0px;">Принят @order.Key.ConfirmedAt</p>
                            <p style="margin-bottom: 0px;">Взят в работу @order.Key.StartedAt</p>
                            <p style="margin-bottom: 0px;">Завершён @order.Key.FinishedAt</p>
                            <p style="margin-bottom: 0px;">
                                Повара:<br />
                                @foreach (var cook in @order.Key.Cooks)
                                {
                                <p style="margin-bottom: 0px;">@cook.FirstName @cook.LastName (@cook.Phone)<br /></p>
                                }
                            </p>
                            <p style="margin-bottom: 0px;">Адрес доставки: @order.Key.Address</p>
                            <p style="margin-bottom: 0px;">Список товаров:</p>
                            <ul type="disc">
                                @foreach (var orderItem in order)
                                {
                                    <li>
                                        <p style="margin-bottom: 0px;">@orderItem.Item.Name x @orderItem.Count = ₽ @(orderItem.Item.Price*orderItem.Count)</p>
                                    </li>
                                }
                            </ul>
                            <p style="margin-bottom: 0px;font-weight: bold;">Итого: ₽ @order.Key.Price</p>
                        </div>
                        <hr>
                    </div>
                }
            }
        }
    </div>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script type="text/javascript">
        function upgrade(item) {
            $.ajax({
                url: '/api/upgrade_state',
                type: 'post',
                dataType: 'json',
                async: false,
                contentType: 'application/json',
                data: JSON.stringify(item)
            });
            document.location.reload();
        }
    </script>
</body>

</html>